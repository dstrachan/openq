const q = @import("../../root.zig");
const Vm = q.Vm;
const Value = q.Value;

pub fn impl(vm: *Vm, x: *Value, y: *Value) !*Value {
    return switch (x.type) {
        .nil => @panic("NYI"),
        .mixed_list => @panic("NYI"),
        .boolean => @panic("NYI"),
        .boolean_list => @panic("NYI"),
        .guid => @panic("NYI"),
        .guid_list => @panic("NYI"),
        .byte => @panic("NYI"),
        .byte_list => @panic("NYI"),
        .short => @panic("NYI"),
        .short_list => @panic("NYI"),
        .int => @panic("NYI"),
        .int_list => @panic("NYI"),
        .long => switch (y.type) {
            .nil => @panic("NYI"),
            .mixed_list => @panic("NYI"),
            .boolean => @panic("NYI"),
            .boolean_list => @panic("NYI"),
            .guid => @panic("NYI"),
            .guid_list => @panic("NYI"),
            .byte => @panic("NYI"),
            .byte_list => @panic("NYI"),
            .short => @panic("NYI"),
            .short_list => @panic("NYI"),
            .int => @panic("NYI"),
            .int_list => @panic("NYI"),
            .long => vm.createLong(x.as.long + y.as.long),
            .long_list => @panic("NYI"),
            .real => @panic("NYI"),
            .real_list => @panic("NYI"),
            .float => vm.createFloat(@as(f64, @floatFromInt(x.as.long)) + y.as.float),
            .float_list => @panic("NYI"),
            .char => @panic("NYI"),
            .char_list => @panic("NYI"),
            .symbol => @panic("NYI"),
            .symbol_list => @panic("NYI"),
        },
        .long_list => @panic("NYI"),
        .real => @panic("NYI"),
        .real_list => @panic("NYI"),
        .float => switch (y.type) {
            .nil => @panic("NYI"),
            .mixed_list => @panic("NYI"),
            .boolean => @panic("NYI"),
            .boolean_list => @panic("NYI"),
            .guid => @panic("NYI"),
            .guid_list => @panic("NYI"),
            .byte => @panic("NYI"),
            .byte_list => @panic("NYI"),
            .short => @panic("NYI"),
            .short_list => @panic("NYI"),
            .int => @panic("NYI"),
            .int_list => @panic("NYI"),
            .long => vm.createFloat(x.as.float + @as(f64, @floatFromInt(y.as.long))),
            .long_list => @panic("NYI"),
            .real => @panic("NYI"),
            .real_list => @panic("NYI"),
            .float => vm.createFloat(x.as.float + y.as.float),
            .float_list => @panic("NYI"),
            .char => @panic("NYI"),
            .char_list => @panic("NYI"),
            .symbol => @panic("NYI"),
            .symbol_list => @panic("NYI"),
        },
        .float_list => @panic("NYI"),
        .char => @panic("NYI"),
        .char_list => @panic("NYI"),
        .symbol => @panic("NYI"),
        .symbol_list => @panic("NYI"),
    };
}
